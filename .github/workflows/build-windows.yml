name: Windows Build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  windows-compilation:
    name: Windows Build
    runs-on: "windows-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive
      - name: vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 63aa65e65b9d2c08772ea15d25fb8fdb0d32e557 }
      - name: Compilation
        run: |
          mkdir build
          cd build
          cmake .. -D "CMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" 
          make
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows-native
          path: project/gdnative/windows/libgddl.dll

  windows-cross-compilation:
    name: Windows Cross Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      - name: Configure dependencies
        run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
            libudev-dev libxi-dev libxrandr-dev yasm mingw-w64 libcurl4-openssl-dev
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles"
          make
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows-cross
          path: project/gdnative/windows/libgddl.dll
